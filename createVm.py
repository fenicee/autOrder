# coding: utf-8

"""
    Description: python client
    Generated by: ecloud-sdk
"""
import base64

import rsa
from ecloudsdkecs.v1 import *

from VmCreateapiSample import VmCreateapiSample
from vpcQuery import Vpc

Suzhou = "CIDC-RP-25"
Guangzhou3 = "CIDC-RP-26"
Chengdu =  "CIDC-RP-27"
Zhengzhou  = "CIDC-RP-28"
Beijing3 = "CIDC-RP-29"
Changsha2 = "CIDC-RP-30"
Jinan = "CIDC-RP-31"
Xian  = "CIDC-RP-32"
Shanghai1 = "CIDC-RP-33"
Chongqing = "CIDC-RP-34"
Hangzhou = "CIDC-RP-35"
Huhehaote = "CIDC-RP-48"
Guiyang = "CIDC-RP-49"

AviableRegion = {"CIDC-RP-25":['WXJD','SZJD'],"CIDC-RP-26":['DGJD'],"CIDC-RP-27":['CDJD'],"CIDC-RP-28":['ZZHKG','ZZGXQ'],"CIDC-RP-29":['BJJD']
                 ,"CIDC-RP-30":['CSZZ'],"CIDC-RP-31":['N0531-SD-JNSC01'],"CIDC-RP-32":['N029-SX-XAXX01'],"CIDC-RP-33":['N021-SH-MHZQ01'],
                 "CIDC-RP-34":['N023-CQ-BBST01'],"CIDC-RP-35":['N0574-ZJ-NBZD01'],"CIDC-RP-48":['N0471-NMG-HHHT01'],"CIDC-RP-490":['N0851-GZ-GYGZ01']}
billingType = ['MONTH','YEAR','HOUR']

vmType = {
"common" :"通用型" ,"commonIntroductory" : "通用入门型","commonNetImprove" : "通用网络优化型","memImprove" : "内存优化型","compute" : "计算型","computeNetImprove" : "计算网络优化型",
"memNetImprove" : "内存网络优化型", "localStorage" : "大数据型" ,"xlargeMemory" : "超大内存型","highFrequency" : "超高主频型","normalNetEnhance" : "通用网络增强型","fpga" : "FPGA型",
"gpu" : "GPU型","vgpu" : "vGPU型","highIO" : "高IO型","exclusive": "独享型"
}

vmType = ['common','commonIntroductory','commonNetImprove','memImprove','compute','computeNetImprove','memNetImprove','localStorage','xlargeMemory'
          ,'highFrequency','normalNetEnhance','fpga','gpu','vgpu','highIO','exclusive']
#可选镜像列表
imageName = ['BC-Linux 7.1 64位','BC-Linux 7.4 64位','BC-Linux 7.5 64位','BC-Linux 7.6 64位','BC-Linux 7.7 64位','BC-Linux 8.1 64位','BC-Linux 8.2 64位',
'CentOS 7.0 64位','CentOS 7.1 64位','CentOS 7.2 64位','CentOS 7.3 64位','CentOS 7.4 64位','CentOS 7.5 64位','CentOS 7.6 64位','CentOS 7.7 64位','CentOS 7.8 64位',
'CentOS 7.9 64位','CoreOS 2303.4.0 64位','Debian 10.2 64位','Debian 10.7 64位','Debian 10.9 64位','Debian 9.11 64位','FreeBSD 12.1 64位','OpenSUSE 15.2 64位',
'OpenSUSE 42.3 64位','openEuler 20.03 64位','Red Hat Enterprise Linux7.2 64位','Red Hat Enterprise Linux7.3 64位','Red Hat Enterprise Linux7.4 64位',
'Red Hat Enterprise Linux7.5 64位','Red Hat Enterprise Linux7.6 64位','Red Hat Enterprise Linux7.7 64位','Red Hat Enterprise Linux8.0 64位',
'Red Hat Enterprise Linux8.1 64位','SUSE Linux Enterprise Server 11 SP3 64位','SUSE Linux Enterprise Server 11 SP4 64位','SUSE Linux Enterprise Server 12 SP3 64位',
'SUSE Linux Enterprise Server 12 SP5 64位','Ubuntu 14.04 64位','Ubuntu 16.04 64位','Ubuntu 18.04 64位','Ubuntu 20.04 64位','Windows Server 2012 R2 Datacenter 64位 英文版',
'Windows Server 2012 R2 Datacenter 64位 中文版','Windows Server 2012 R2 Standard 64位 英文版','Windows Server 2012 R2 Standard 64位 中文版',
'Windows Server 2016 Datacenter 64位 英文版','Windows Server 2016 Datacenter 64位 中文版','Windows Server 2019 DataCenter 64位 英文版','Windows Server 2019 DataCenter 64位 中文版']




def main():
    #假设用苏州节点
    client = VmCreateapiSample.create_client("7bee2d8d0a38429dbaaade711bc42baf","9a7bd2bb5f50488eb16dcb0547b12435",Suzhou)
    request = VmCreateapiRequest()
    vmcreate_body = VmCreateapiBody()
    #假设都用第一个节点
    vmcreate_body.region = AviableRegion[Suzhou][0]
    #假设都是月付
    vmcreate_body.billing_type = billingType[1]
    #假设是通用入门型
    vmcreate_body._vm_type = vmType[1]
    vmcreate_body.cpu = 1
    vmcreate_body.ram = 2
    #系统盘大小，linux大于20，windows大于40
    vmcreate_body.disk = 40

    boot_volume=VmCreateapiRequestBootVolume()
    boot_volume.volume_type = "performanceOptimization"
    boot_volume.size = 40
    vmcreate_body.boot_volume = boot_volume

    networks = VmCreateapiRequestNetworks()
    vpc = Vpc()
    networks.network_id = vpc.getNetworkId("7bee2d8d0a38429dbaaade711bc42baf","9a7bd2bb5f50488eb16dcb0547b12435",Suzhou)

    #弹性IP
    ip = VmCreateapiRequestIp()
    ip.ip_type = "MOBILE"
    vmcreate_body.ip = ip

    bandwith = VmCreateapiRequestBandwidth()
    #按带宽计费。
    bandwith.charge_mode = "bandwidthCharge"
    bandwith.bandwidth_size = 1
    vmcreate_body.bandwidth = bandwith

    with open('publickey.pem', mode ='rb') as publicfile :
        keydata = publicfile.read()
    publickey = rsa.PublicKey.load_pkcs1_openssl_pem(keydata)
    password = 'Root123~@'.encode('utf8')
    crypto = rsa.encrypt(password,publickey)
    crypto=base64.encodebytes(crypto).decode('utf-8')

    vmcreate_body._networks = networks
    vmcreate_body.duration = 1
    vmcreate_body.quantity = 1
    vmcreate_body.password = crypto
    vmcreate_body.image_name = imageName[0]
    vmcreate_body.name = 'test-1234'
    request.vm_create_body = vmcreate_body
    try:
        data = client.vm_createapi(request)
        if data.body == None:
            print(data.error_message)
    except Exception as e:
        print(e)
        print("订购成功,生成了订单")
if __name__ == '__main__':
    main()


